{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button[data-start]');\nconst daySpan = document.querySelector('span[data-days]');\nconst hoursSpan = document.querySelector('span[data-hours]');\nconst minutesSpan = document.querySelector('span[data-minutes]');\nconst secondsSpan = document.querySelector('span[data-seconds]');\n\nbutton.disabled = true;\n\nlet userSelectedDate = '';\n\niziToast.settings({\n  timeout: 4000,\n  position: 'topRight',\n});\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > Date.now()) {\n      button.disabled = false;\n      userSelectedDate = selectedDates[0] - Date.now();\n    } else {\n      button.disabled = true;\n      iziToast.error({ message: 'Please choose a date in the future' });\n    }\n  },\n};\n\nflatpickr(input, options);\n\nconst handleClick = () => {\n  input.disabled = true;\n  const timeInterval = setInterval(() => {\n    if (userSelectedDate > 1000) {\n      userSelectedDate -= 1000;\n      const { days, hours, minutes, seconds } = convertMs(userSelectedDate);\n      daySpan.textContent = `${days}`.padStart(2, '0');\n      hoursSpan.textContent = `${hours}`.padStart(2, '0');\n      minutesSpan.textContent = `${minutes}`.padStart(2, '0');\n      secondsSpan.textContent = `${seconds}`.padStart(2, '0');\n      button.disabled = true;\n    }\n    if (userSelectedDate <= 1000) {\n      clearInterval(timeInterval);\n      input.disabled = false;\n    }\n  }, 1000);\n};\n\nbutton.addEventListener('click', handleClick);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["input","button","daySpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","iziToast","options","selectedDates","flatpickr","handleClick","timeInterval","days","hours","minutes","seconds","convertMs","ms"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAU,SAAS,cAAc,iBAAiB,EAClDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/DJ,EAAO,SAAW,GAElB,IAAIK,EAAmB,GAEvBC,EAAS,SAAS,CAChB,QAAS,IACT,SAAU,UACZ,CAAC,EAED,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BR,EAAO,SAAW,GAClBK,EAAmBG,EAAc,CAAC,EAAI,KAAK,IAAG,IAE9CR,EAAO,SAAW,GAClBM,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,EAEnE,CACH,EAEAG,EAAUV,EAAOQ,CAAO,EAExB,MAAMG,EAAc,IAAM,CACxBX,EAAM,SAAW,GACjB,MAAMY,EAAe,YAAY,IAAM,CACrC,GAAIN,EAAmB,IAAM,CAC3BA,GAAoB,IACpB,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUX,CAAgB,EACpEJ,EAAQ,YAAc,GAAGW,CAAI,GAAG,SAAS,EAAG,GAAG,EAC/CV,EAAU,YAAc,GAAGW,CAAK,GAAG,SAAS,EAAG,GAAG,EAClDV,EAAY,YAAc,GAAGW,CAAO,GAAG,SAAS,EAAG,GAAG,EACtDV,EAAY,YAAc,GAAGW,CAAO,GAAG,SAAS,EAAG,GAAG,EACtDf,EAAO,SAAW,EACnB,CACGK,GAAoB,MACtB,cAAcM,CAAY,EAC1BZ,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,EAEAC,EAAO,iBAAiB,QAASU,CAAW,EAE5C,SAASM,EAAUC,EAAI,CAOrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}